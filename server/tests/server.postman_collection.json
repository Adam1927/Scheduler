{
	"info": {
		"_postman_id": "8b3dec93-4df5-4dfe-8389-22fa5aaefb52",
		"name": "server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29405874",
		"_collection_link": "https://crimson-firefly-423526.postman.co/workspace/Group-11~6e3566de-e04a-4721-8b56-507d1ad5ffab/collection/29405874-8b3dec93-4df5-4dfe-8389-22fa5aaefb52?action=share&source=collection_link&creator=29405874"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "Register user 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"user1_id\", jsonData.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(jsonData.message).to.equal('Registration successful');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"thatGuy3\",\r\n    \"password\": \"123456\",\r\n    \"name\": \"Guy That\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/users/register",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Logout successful');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:3001/api/users/logout",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"users",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Log-in successful');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"thatGuy3\",\r\n    \"password\": \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/users/login",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Users found');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:3001/api/users",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('User found');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:3001/api/users/:id",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{user1_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update all user attributes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('User has been updated');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"thatGuy\",\r\n    \"password\": \"654321\",\r\n    \"name\": \"That guy\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/users/:id",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{user1_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user attributes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('User has been updated');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"thatDude\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/users/:id",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{user1_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('User deleted');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:3001/api/users/:id",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{user1_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "teams",
			"item": [
				{
					"name": "Register user 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"user2_id\", jsonData.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(jsonData.message).to.equal('Registration successful');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"hehe4\",\r\n    \"password\": \"69420\",\r\n    \"name\": \"goose\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/users/register",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register user 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"user3_id\", jsonData.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(jsonData.message).to.equal('Registration successful');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"PeNi4\",\r\n    \"password\": \"hello1\",\r\n    \"name\": \"Peter Niklas\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/users/register",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create team 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"team1_id\", jsonData.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(jsonData.message).to.equal('Team created successfully');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Team awesome\",\r\n    \"user\": \"{{user2_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/teams",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"teams"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Team members added successfully');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": \"{{user2_id}}\",\r\n    \"members\": [\"{{user3_id}}\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/teams/:team_id/members",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"teams",
								":team_id",
								"members"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "{{team1_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user's teams",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Teams found');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:3001/api/users/:id/teams",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"users",
								":id",
								"teams"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{user2_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get team by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Team found');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:3001/api/teams/:id",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"teams",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{team1_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all teams",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Teams found');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:3001/api/teams",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"teams"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update all team attributes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Team has been updated');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": \"{{user2_id}}\",\r\n    \"name\": \"Team more awesome\",\r\n    \"managerUsername\": \"PeNi4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/teams/:id",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"teams",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{team1_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete team's events",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Events deleted');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:3001/api/teams/:id/events",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"teams",
								":id",
								"events"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{team1_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete team by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Team deleted');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:3001/api/teams/:id",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"teams",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{team1_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "events",
			"item": [
				{
					"name": "Create team 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"team3_id\", jsonData.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(jsonData.message).to.equal('Team created successfully');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Team terrible\",\r\n    \"user\": \"{{user2_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/teams",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"teams"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Team members added successfully');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": \"{{user2_id}}\",\r\n    \"members\": [\"{{user3_id}}\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/teams/:team_id/members",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"teams",
								":team_id",
								"members"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "{{team3_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create event 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"event1_id\", jsonData.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(jsonData.message).to.equal('Event created successfully');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userID\": \"{{user2_id}}\",\r\n    \"name\": \"Fun event\",\r\n    \"team\": \"{{team3_id}}\",\r\n    \"startDate\": \"2023-10-15\",\r\n    \"endDate\": \"2023-10-20\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/events",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update availability",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Availabilities updated successfully');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": \"{{user2_id}}\",\r\n    \"availabilities\": [0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/events/:event_id/availability",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"events",
								":event_id",
								"availability"
							],
							"variable": [
								{
									"key": "event_id",
									"value": "{{event1_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update availability",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Availabilities updated successfully');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": \"{{user3_id}}\",\r\n    \"availabilities\": [0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/events/:event_id/availability",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"events",
								":event_id",
								"availability"
							],
							"variable": [
								{
									"key": "event_id",
									"value": "{{event1_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get event by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"slot1_id\", jsonData.event.slots[0]);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Event found');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:3001/api/events/:id",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"events",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{event1_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get optimal time",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"slot2_id\", jsonData.optimal_time.slots[0]);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Optimal time found');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": \"{{user2_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/events/:event_id/optimal_time",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"events",
								":event_id",
								"optimal_time"
							],
							"variable": [
								{
									"key": "event_id",
									"value": "{{event1_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add selected slot",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Optimal time found');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": \"{{user2_id}}\",\r\n    \"slotId\": \"{{slot2_id}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/events/:event_id/selected_slot",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"events",
								":event_id",
								"selected_slot"
							],
							"variable": [
								{
									"key": "event_id",
									"value": "{{event1_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get event's timeslot by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Timeslot found');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/events/:event_id/slots/:slot_id",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"events",
								":event_id",
								"slots",
								":slot_id"
							],
							"variable": [
								{
									"key": "event_id",
									"value": "{{event1_id}}"
								},
								{
									"key": "slot_id",
									"value": "{{slot1_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update event attributes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Event has been updated');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"worst event ever\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/events/:id",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"events",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{event1_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete event by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Event deleted');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:3001/api/events/:id",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"events",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{event1_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create event 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"event2_id\", jsonData.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.expect(jsonData.message).to.equal('Event created successfully');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userID\": \"{{user2_id}}\",\r\n    \"name\": \"Funnner event\",\r\n    \"team\": \"{{team3_id}}\",\r\n    \"startDate\": \"2023-10-15\",\r\n    \"endDate\": \"2023-10-30\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/events",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get event by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"slot3_id\", jsonData.event.slots[0]);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Event found');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:3001/api/events/:id",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"events",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{event2_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete event timeslot by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Timeslot deleted');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:3001/api/events/:event_id/slots/:slot_id",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"events",
								":event_id",
								"slots",
								":slot_id"
							],
							"variable": [
								{
									"key": "event_id",
									"value": "{{event2_id}}"
								},
								{
									"key": "slot_id",
									"value": "{{slot3_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete event by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Event deleted');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							},
							{
								"key": "X-Secret",
								"value": "Parisaxo",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:3001/api/events/:id",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"events",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{event2_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete team by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Team deleted');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:3001/api/teams/:id",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"teams",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{team3_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('User deleted');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:3001/api/users/:id",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{user2_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('Log-in successful');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"PeNi4\",\r\n    \"password\": \"hello1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:3001/api/users/login",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    var jsonData = JSON.parse(responseBody);\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(jsonData.message).to.equal('User deleted');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-API-Version",
								"value": "v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:3001/api/users/:id",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "3001",
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{user3_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "user3_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "team1_id",
			"value": ""
		},
		{
			"key": "team2_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "team3_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "event1_id",
			"value": ""
		},
		{
			"key": "event2_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "slot1_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "slot2_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "user1_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "user2_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "slot3_id",
			"value": "",
			"type": "string"
		}
	]
}